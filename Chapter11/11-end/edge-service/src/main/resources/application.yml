server:
  port: 9000
  netty:
    connection-timeout: 5s
  shutdown: graceful

spring:
  lifecycle:
    timeout-per-shutdown-phase: 15s
  cloud:
    gateway:
      httpclient:
        connect-timeout: 5000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      default-filters:
        - SaveSession
        - TokenRelay
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestedTokens: 1
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackOff: 500ms
              factor: 2
              basedOnPreviousValue: false
      routes:
        - id: catalog-route
          uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/books
          predicates:
            - Path=/books/**
          filters:
            - name: CircuitBreaker
              args:
                name: catalogCircuitBreaker
                fallbackUri: forward:/catalog-fallback
        - id: order-route
          uri: ${ORDER_SERVICE_URL:http://localhost:9002}/orders
          predicates:
            - Path=/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
  redis:
    connect-timeout: 5s
    host: localhost
    port: 6379
    timeout: 500ms
    password: admin
  session:
    store-type: redis
    timeout: 10m
    redis:
      namespace: polar:edge
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: edge-service
            client-secret: 887f916e-552e-4d84-a8e1-a195d3212d1f
            scope: openid, roles
        provider:
          keycloak:
            issuer-uri: http://localhost:8180/auth/realms/PolarBookshop

resilience4j.circuitbreaker:
  configs:
    default:
      minimumNumberOfCalls: 20
      slidingWindowSize: 20
      permittedNumberOfCallsInHalfOpenState: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 60s
  instances:
    catalogCircuitBreaker:
      baseConfig: default
    orderCircuitBreaker:
      baseConfig: default

resilience4j.timelimiter:
  configs:
    default:
      timeoutDuration: 5s
      cancelRunningFuture: true

logging:
  level:
    io.github.resilience4j: DEBUG
